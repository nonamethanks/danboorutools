[tool.poetry]
name = "danboorutools"
version = "0.0.3"
description = "A set of danbooru admin tools."
authors = ["nonamethanks <nonamethanks@nonamethanks.xyz>"]

[tool.poetry.scripts]
create_artist_tags = "danboorutools.scripts.create_artist_tags:main"
nuke_tag_edits = "danboorutools.scripts.nuke_tag_edits:main"
nuke_votes = "danboorutools.scripts.nuke_votes:main"
test_parsing = "danboorutools.scripts.test_parsing:main"
replace_ehentai_samples = "danboorutools.scripts.replace_ehentai_samples:main"
tag_paid_rewards_on_gelbooru = "danboorutools.scripts.tag_paid_rewards_on_gelbooru:main"

[tool.poetry.dependencies]
python = "^3.11"
requests = "^2.28.2"
python-dateutil = "^2.8.2"
click = "^8.1.3"
loguru = "^0.6.0"
python-dotenv = "^0.21.1"
selenium = "^4.8.2"
ratelimit = "^2.2.1"
pytz = "^2022.7.1"
filetype = "^1.2.0"
beautifulsoup4 = "^4.11.2"
html5lib = "^1.1"
ipython = "^8.11.0"
setuptools = "^67.4.0"
peewee = "^3.16.0"
python-twitter = "^3.5"
backoff = "^2.2.1"
pykakasi = "^2.2.1"
unidecode = "^1.3.6"
pydantic = "^1.10.5"
frozendict = "^2.3.5"

[tool.poetry.group.dev.dependencies]
types-requests = "^2.28.11.15"
pylint = "^2.16.3"
types-python-dateutil = "^2.8.19.10"
mypy = "^1.0.1"
autopep8 = "^2.0.2"
types-pkg-resources = "^0.1.3"
flake8 = "^6.0.0"
flake8-annotations = "^3.0.0"
flake8-pyproject = "^1.2.2"
types-pytz = "^2022.7.1.2"
pyinstrument = "^4.4.0"
line-profiler = "^4.0.3"

[tool.poetry.group.test.dependencies]
ward = "^0.67.2b0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ward]
path = ["tests"]
# hook_module = ["ward_coverage"]

# [tool.ward.plugins.coverage]
# omit = ["tests/*"]

[tool.autopep8]
max_line_length = 140

[tool.isort]
line_length = 140

[tool.mypy]
check_untyped_defs = true
enable_error_code = "redundant-expr,ignore-without-code"
ignore_missing_imports = true
no_pretty = true
show_column_numbers = true
show_error_codes = true
strict_equality = true
warn_unused_ignore = true
enable_incomplete_feature = "Unpack"

[tool.flake8]
max-line-length=140
ignore= [
    "ANN001",
    "ANN002",
    "ANN003",
    "ANN101",
    "ANN102",
    "ANN204",
    "E501", # already handled by pylint
    "F841", # flake8 is too fucking retarded to understand that fucking goddamned underscore variables are not superfluous. Retard.
    "W503",
    "W504",
]

[tool.pycodestyle]
max-line-length = 140

[tool.pylint]
disable=[
    "broad-except",
    "missing-class-docstring",
    "missing-function-docstring",
    "missing-module-docstring",
    "no-else-break",
    "no-else-continue",
    "no-else-raise",
    "no-else-return",
    "no-member", # too many stupid false positives: https://github.com/PyCQA/pylint/issues/4693
    "protected-access",
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-instance-attributes",
    "too-many-public-methods",
    "too-many-return-statements",
    "use-dict-literal",
    "useless-else-on-loop",
]

[tool.pylint.FORMAT]
ignore-long-lines= '^\s*(# )?"?<?https?:\/\/\S+>?'
max-line-length=140
good-names=[
    "e",
    "id"
]


[tool.pylint."MESSAGES CONTROL"]
enable="useless-suppression"
extension-pkg-whitelist = ["pydantic"]
